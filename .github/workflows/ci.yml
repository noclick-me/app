name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  JAVA_VERSION: 12.x
  FLUTTER_CHANNEL: beta

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        type: [ static, unit, goldens ]

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-java@v1
      with:
        java-version: ${{ env.JAVA_VERSION }}

    - uses: subosito/flutter-action@v1
      with:
        channel: ${{ env.FLUTTER_CHANNEL }}

    - name: Install dependencies
      run: flutter pub get

    - name: Analyze
      if: matrix.type == 'static'
      uses: zgosalvez/github-actions-analyze-flutter@v1
      with:
        fail-on-warnings: true

    - name: Check format
      if: matrix.type == 'static'
      run: flutter format -n --set-exit-if-changed lib test example

    - name: Run ${{ matrix.type }} tests
      if: matrix.type != 'static'
      run: flutter test --coverage --coverage-path=coverage/${{ matrix.type }}.lcov.info test/${{ matrix.type }}

    - name: Upload ${{ matrix.type }} tests coverage to Codecov
      if: matrix.type != 'static'
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: coverage/${{ matrix.type }}.lcov.info
        flags: type-${{ matrix.type }},flutter-${{ env.FLUTTER_CHANNEL }}

    - name: Save coverage reports as artifacts
      if: matrix.type != 'static'
      uses: actions/upload-artifact@v2
      with:
        name: coverage-${{ matrix.type }}
        path: coverage/${{ matrix.type }}.lcov.info

  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        target: [ android, android-arm, android-arm64, android-x64, web ]

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Install Java
      uses: actions/setup-java@v1
      with:
        java-version: ${{ env.JAVA_VERSION }}

    - name: Install Flutter
      uses: subosito/flutter-action@v1
      with:
        channel: ${{ env.FLUTTER_CHANNEL }}

    - name: Enable Flutter web
      if: ${{ matrix.target == 'web' }}
      run: flutter config --enable-web

    - name: Install dependencies
      run: flutter pub get

    - name: Build multi-arch apk
      if: matrix.target == 'android'
      run: |
        TARGET=${{ matrix.target }}
        flutter build apk --release
        mkdir -p artifacts/$TARGET
        mv build/app/outputs/flutter-apk/app-release.apk \
          artifacts/$TARGET/noclickme-$(git describe).apk

    - name: Build apk for ${{ matrix.target }}
      if: startsWith(matrix.target, 'android-')
      run: |
        TARGET=${{ matrix.target }}
        ARCH=$(echo $TARGET | cut -d- -f2)
        flutter build apk --target-platform $TARGET --release
        mkdir -p artifacts/$TARGET
        mv build/app/outputs/flutter-apk/app-release.apk \
          artifacts/$TARGET/noclickme-$ARCH-$(git describe).apk

    - name: Build web
      if: matrix.target == 'web'
      run: |
        TARGET=${{ matrix.target }}
        flutter build $TARGET --release
        mkdir -p artifacts
        mv build/web artifacts/$TARGET

    - name: Save build artifacts for ${{ matrix.target }}
      if: startsWith(matrix.target, 'android')
      uses: actions/upload-artifact@v2
      with:
        name: build-${{ matrix.target }}
        path: artifacts/${{ matrix.target }}/noclickme*.apk
        if-no-files-found: error

    - name: Save build artifacts for ${{ matrix.target }}
      if: "!startsWith(matrix.target, 'android')"
      uses: actions/upload-artifact@v2
      with:
        name: build-${{ matrix.target }}
        path: artifacts/${{ matrix.target }}/
        if-no-files-found: error

  deploy:
    runs-on: ubuntu-latest
    needs: [ build, test ]
    if: github.repository == 'noclick-me/noclick.me' && github.event_name == 'push'
    environment: test

    steps:

    - name: Checkout the web repository
      uses: actions/checkout@v2
      with:
        repository: ${{ github.repository_owner }}/web.noclick.me
        ref: test
        ssh-key: ${{ secrets.WEB_DEPLOY_SSH_KEY }}

    - name: Configure the git author
      run: |
        git config --local user.name 'GitHub Action'
        git config --local user.email automation@noclick.me

    - name: Clean all the files from the repository
      run: git ls-files -z | xargs -0 --verbose rm -fv

    - name: Download and extract the web build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-web

    - name: Check if there is anything to commit
      id: diff
      run: |
        git add -A
        diff=$(git diff --cached -U0 | grep -B1 @@)
        tmp=$(mktemp)
        read -r -d '' noop_diff <<'EOT'
        +++ b/flutter_service_worker.js
        @@ -15,2 +15,2 @@ const RESOURCES = {
        --
        +++ b/index.html
        @@ -39 +39 @@
        EOT
        if test -z -o test "$noop_diff" == "$diff"
        then
          echo "::warning ::No changes detected in the repository"
        else
          echo "::set-output name=has_changes::true"
        fi
        git status

    - name: Commit changes
      if: steps.diff.outputs.has_changes == 'true'
      run: |
        git commit -m 'Build for ${{ github.repository }}@${{ github.ref }} (${{ github.sha }})'
        echo ::group::status
        git show
        echo ::endgroup::

    - name: Push to the web repository
      if: steps.diff.outputs.has_changes == 'true'
      run: git push

# vim: set et sw=2 sts=2 :
