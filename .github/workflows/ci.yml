name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  JAVA_VERSION: 12.x
  FLUTTER_CHANNEL: beta

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        type: [ static, unit, goldens ]

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-java@v1
      with:
        java-version: ${{ env.JAVA_VERSION }}

    - uses: subosito/flutter-action@v1
      with:
        channel: ${{ env.FLUTTER_CHANNEL }}

    - name: Install dependencies
      run: flutter pub get

    - name: Analyze
      if: matrix.type == 'static'
      uses: zgosalvez/github-actions-analyze-flutter@v1
      with:
        fail-on-warnings: true

    - name: Check format
      if: matrix.type == 'static'
      run: flutter format -n --set-exit-if-changed lib test example

    - name: Run ${{ matrix.type }} tests
      if: matrix.type != 'static'
      run: flutter test --coverage --coverage-path=coverage/${{ matrix.type }}.lcov.info test/${{ matrix.type }}

    - name: Upload ${{ matrix.type }} tests coverage to Codecov
      if: matrix.type != 'static'
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: coverage/${{ matrix.type }}.lcov.info
        flags: type-${{ matrix.type }},flutter-${{ env.FLUTTER_CHANNEL }}

    - name: Save coverage reports as artifacts
      if: matrix.type != 'static'
      uses: actions/upload-artifact@v2
      with:
        name: coverage-${{ matrix.type }}
        path: coverage/${{ matrix.type }}.lcov.info

  build:
    runs-on: ubuntu-latest
    needs: test

    strategy:
      fail-fast: false
      matrix:
        target: [ android, android-arm, android-arm64, android-x64, web ]

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Install Java
      uses: actions/setup-java@v1
      with:
        java-version: ${{ env.JAVA_VERSION }}

    - name: Install Flutter
      uses: subosito/flutter-action@v1
      with:
        channel: ${{ env.FLUTTER_CHANNEL }}

    - name: Enable Flutter web
      if: ${{ matrix.target == 'web' }}
      run: flutter config --enable-web

    - name: Install dependencies
      run: flutter pub get

    - name: Build multi-arch apk
      if: matrix.target == 'android'
      run: flutter build apk --release

    - name: Build apk for ${{ matrix.target }}
      if: startsWith(matrix.target, 'android-')
      run: flutter build apk --target-platform ${{ matrix.target }} --release

    - name: Build web
      if: matrix.target == 'web'
      run: flutter build web --release

    - name: Save build artifacts
      if: matrix.target == 'android'
      uses: actions/upload-artifact@v2
      with:
        name: build-${{ matrix.target }}
        path: |
          build/web/
          build/app/outputs/flutter-apk/app-release.apk

    - name: Save build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-${{ matrix.target }}
        path: |
          build/web/
          build/app/outputs/flutter-apk/app-release.apk

# vim: set et sw=2 sts=2 :
